% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MetaCyto_Functions.R
\name{glmAnalysis}
\alias{glmAnalysis}
\title{perform generalized linear model analysis to estimate effect size.}
\usage{
glmAnalysis(value = "value", variableOfInterst = "SUBJECT_AGE", parameter,
  otherVariables = c("GENDER"), studyID = "study", label = "label", data,
  CILevel = 0.95, ifScale = c(T, F))
}
\arguments{
\item{value}{a string to specify the column name of the dependent variable (y)}

\item{variableOfInterst}{a string to specify the column name of the independent variable of interest (x1)}

\item{parameter}{a string to specify what summary statistics is the dependent variale.}

\item{otherVariables}{a string vector to specify the column names of independent variables included in the regression model other than the variableOfInterst.}

\item{studyID}{a string to specify the column name of study ID.}

\item{label}{a string to specify the name the column that contains the cluster label or name.}

\item{data}{a data frame containing the data. Usually a long form data frame returned by collectData.}

\item{CILevel}{a number between 0 to 1, used to specify the confidence interval to be plotted in the forrest plot.}

\item{ifScale}{a vector of two logic values, specifing if the dependent variable and the variableOfInterst should be scaled when calculating the effect size.}
}
\value{
returns data frame describing the overall effect size of variableOfInterst on value.  May be slightly different from the value reported from the function metaAnalysis.
}
\description{
A function that perform generalized linear model analysis to estimate effect size.
}
\details{
The function use the model value ~ variableOfInterst + otherVariables + studyID to estimate the effect size. Use it as a screening tool. Use metaAnalysis function to analyze an  effect size in more detail.
}
\examples{
#collect all summary statistics
fn=system.file("extdata","",package="MetaCyto")
files=list.files(fn,pattern="cluster_stats_in_each_sample",recursive=T,full.names=T)
fcs_stats=collectData(files,longform=T)
# Collect sample information
files=list.files(fn,pattern="sample_info",recursive=T,full.names=T)
sample_info=collectData(files,longform=F)
# join the cluster summary statistics with sample information
all_data=inner_join(fcs_stats,sample_info,by="fcs_files")
# See the fraction of what clusters are affected by age (while controlling for GENDER)
GA=glmAnalysis(value="value",variableOfInterst="SUBJECT_AGE",parameter="fraction",
              otherVariables=c("GENDER"),studyID="study_id",label="label",
              data=all_data,CILevel=0.95,ifScale=c(T,F))
}

